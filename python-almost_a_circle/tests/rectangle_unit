#!usr/bin/python3

import unittest
from rectangle import Rectangle


class TestRectangle(unittest.TestCase):
    def test_rectangle_exists(self):
        self.assertIsNotNone(Rectangle(1, 2))
        self.assertIsNotNone(Rectangle(1, 2, 3))
        self.assertIsNotNone(Rectangle(1, 2, 3, 4))
        with self.assertRaises(TypeError):
            Rectangle("1", 2)
            Rectangle(1, "2")
            Rectangle(1, 2, "3")
            Rectangle(1, 2, 3, "4")
        with self.assertRaises(ValueError):
            Rectangle(-1, 2)
            Rectangle(1, -2)
            Rectangle(0, 2)
            Rectangle(1, 0)
            Rectangle(1, 2, -3)
            Rectangle(1, 2, 3, -4)

    def test_rectangle_methods(self):
        r = Rectangle(1, 2)
        self.assertIsNotNone(r.area)
        self.assertIsNotNone(r.__str__)
        self.assertIsNotNone(r.display)
        self.assertIsNotNone(r.to_dictionary)
        self.assertIsNotNone(r.update)

    def test_rectangle_update(self):
        r = Rectangle(1, 2)
        r.update(89, 1, 2, 3, 4)
        self.assertEqual(r.id, 89)
        self.assertEqual(r.width, 1)
        self.assertEqual(r.height, 2)
        self.assertEqual(r.x, 3)
        self.assertEqual(r.y, 4)

    def test_rectangle_create(self):
        r = Rectangle.create(**{
            'id': 89,
            'width': 1,
            'height': 2,
            'x': 3,
            'y': 4
        })
    self.assertEqual(r.id, 89)
    self.assertEqual(r.width, 1)
    self.assertEqual(r.height, 2)
    self.assertEqual(r.x, 3)
    self.assertEqual(r.y, 4)

    def test_rectangle_save_to_file(self):
        Rectangle.save_to_file([Rectangle(1, 2)])
        self.assertTrue(os.path.exists('Rectangle.json'))

    def test_rectangle_load_from_file(self):
        Rectangle.save_to_file([Rectangle(1, 2)])
        rectangles = Rectangle.load_from_file()
        self.assertEqual(len(rectangles), 1)


if __name__ == '__main__':
    unittest.main()
