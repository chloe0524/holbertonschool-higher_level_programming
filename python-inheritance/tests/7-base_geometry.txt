# doctest file for testing the `BaseGeometry` class modules

# Test cases for integer_validator method

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> base_geometry = BaseGeometry()

>>> base_geometry.integer_validator("age", 10)
>>> base_geometry.integer_validator("height", 20)

>>> base_geometry.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> base_geometry.integer_validator("height", "string")
Traceback (most recent call last):
...
TypeError: height must be an integer

>>> base_geometry.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> base_geometry.integer_validator("height", -5)
Traceback (most recent call last):
...
ValueError: height must be greater than 0

>>> base_geometry.integer_validator("age", 10.5)
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> base_geometry.integer_validator("height", [10, 20])
Traceback (most recent call last):
...
TypeError: height must be an integer

>>> base_geometry.integer_validator("age", {10, 20})
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> base_geometry.integer_validator("height", True)
Traceback (most recent call last):
...
TypeError: height must be an integer
